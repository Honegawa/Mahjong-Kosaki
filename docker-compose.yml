services:
  backend:
    build: ./backend
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    environment:
      - PORT=${NODE_DOCKER_PORT}
      - TOKEN=${TOKEN}
      - CLIENT_ORIGIN=${CLIENT_ORIGIN}
      - DB_HOST=${MYSQL_HOST}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_TYPE=${MYSQL_TYPE}
      - DEFAULT_USER_PASSWORD=${DEFAULT_USER_PASSWORD}
    volumes:
      - ./backend:/usr/local/apps/backend
      - node_modules_back:/usr/local/apps/backend/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_APP_API_BASE_URL=${CLIENT_API_BASE_URL}
    ports:
      - ${VITE_LOCAL_PORT}:${VITE_DOCKER_PORT}
    volumes:
      - ./frontend:/usr/local/apps/frontend
      - node_modules_front:/usr/local/apps/frontend/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  mysql:
    image: mysql:lts
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER -p $$MYSQL_PASSWORD || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 10s
    networks:
      - app-network

  adminer:
    image: adminer
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - app-network

volumes:
  mysql-data:
  node_modules_front:
  node_modules_back:


networks:
  app-network: